// This is an autogenerated file from Firebase Studio.
import { z } from "zod";

const formSchema = z.object({
  name: z.string(),
  email: z.string().email(),
  subject: z.string(),
  message: z.string(),
});

export type ReceivedMessage = z.infer<typeof formSchema> & {
  id: string;
  receivedAt: Date;
  replied: boolean;
  replyContent?: string;
};

// Isto atua como um armazenamento em memória simples para o protótipo.
// Em um aplicativo real, você usaria um banco de dados como o Firestore.
export const messagesDB: ReceivedMessage[] = [
    {
        id: 'msg_1717171717171',
        name: 'João da Silva',
        email: 'joao.silva@example.com',
        subject: 'Dúvida sobre produtos',
        message: 'Olá, gostaria de saber mais sobre o frango temperado. Quais são os temperos utilizados? Obrigado!',
        receivedAt: new Date(Date.now() - 86400000), // ontem
        replied: false,
    },
    {
        id: 'msg_1717171717172',
        name: 'Maria Oliveira',
        email: 'maria.o@example.com',
        subject: 'Pedido em grande quantidade',
        message: 'Tenho um restaurante e gostaria de fazer um pedido grande. Vocês oferecem preços especiais para atacado?',
        receivedAt: new Date(Date.now() - 172800000), // 2 dias atrás
        replied: true,
        replyContent: 'Olá Maria, obrigado pelo contato! Sim, oferecemos condições especiais para atacado. Um de nossos representantes entrará em contato com você em breve. Atenciosamente, Equipe Frango Dourado.'
    }
];

export const addMessage = (message: Omit<ReceivedMessage, 'id' | 'receivedAt' | 'replied' | 'replyContent'>) => {
    const newMessage: ReceivedMessage = {
        ...message,
        id: `msg_${Date.now()}`,
        receivedAt: new Date(),
        replied: false,
    };
    messagesDB.unshift(newMessage);
};

export const markAsReplied = (id: string, replyContent: string) => {
    const messageIndex = messagesDB.findIndex(m => m.id === id);
    if (messageIndex !== -1) {
        messagesDB[messageIndex] = { ...messagesDB[messageIndex], replied: true, replyContent: replyContent };
    }
}
